{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["UserProfiles","state","users","fetch","then","response","ok","json","Error","data","setState","results","catch","error","console","log","list","this","map","u","i","name","first","last","email","login","md5","onClick","window","location","reload","React","Component","User","style","borderStyle","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"kNAEMA,E,kDACJ,aAAgB,IAAD,8BACb,gBACKC,MAAQ,CACXC,MAAO,IAHI,E,qDAOf,WAAsB,IAAD,OACnBC,MAAM,yCACHC,MAAK,SAAAC,GACJ,GAAIA,EAASC,GAAI,OAAOD,EAASE,OACjC,MAAM,IAAIC,MAAM,sBAEjBJ,MAAK,SAAAK,GACJ,EAAKC,SAAS,CAAER,MAAOO,EAAKE,aAE7BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,oBAIlB,WACE,IAAMG,EAAOC,KAAKhB,MAAMC,MAAMgB,KAAI,SAACC,EAAGC,GACpC,OACE,cAAC,EAAD,CAEEC,KAAI,UAAKF,EAAEE,KAAKC,MAAZ,YAAqBH,EAAEE,KAAKE,MAChCC,MAAOL,EAAEK,OAFJL,EAAEM,MAAMC,QAMnB,OACE,gCACE,gDACA,wBAAQC,QAAS,kBAAMC,OAAOC,SAASC,UAAvC,oBACCd,S,GApCkBe,IAAMC,WA0C3BC,E,4JACJ,WACE,OACE,sBAAKC,MAAO,CAAEC,YAAa,UAA3B,UACE,6BAAKlB,KAAKmB,MAAMf,OAChB,4BAAIJ,KAAKmB,MAAMZ,e,GALJO,IAAMC,WAWVhC,IC3CAqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5692b509.chunk.js","sourcesContent":["import React from 'react'\n\nclass UserProfiles extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      users: []\n    }\n  }\n\n  componentDidMount () {\n    fetch('https://randomuser.me/api/?results=50')\n      .then(response => {\n        if (response.ok) return response.json()\n        throw new Error('Request failed.')\n      })\n      .then(data => {\n        this.setState({ users: data.results })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render () {\n    const list = this.state.users.map((u, i) => {\n      return (\n        <User\n          key={u.login.md5}\n          name={`${u.name.first} ${u.name.last}`}\n          email={u.email}\n        />\n      )\n    })\n    return (\n      <div>\n        <h1>My users list:</h1>\n        <button onClick={() => window.location.reload()}>reload</button>\n        {list}\n      </div>\n    )\n  }\n}\n\nclass User extends React.Component {\n  render () {\n    return (\n      <div style={{ borderStyle: 'dotted' }}>\n        <h3>{this.props.name}</h3>\n        <p>{this.props.email}</p>\n      </div>\n    )\n  }\n}\n\nexport default UserProfiles\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}